{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/scripts/api.js","webpack://mesto-project-ff/./src/components/scripts/cards.js","webpack://mesto-project-ff/./src/components/scripts/modal.js","webpack://mesto-project-ff/./src/components/scripts/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["const config = {\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-8',\n  headers: {\n    authorization: 'cdea2609-51f4-4604-8d74-eb96bd5a104d',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst getCurrentUser = () => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    headers: config.headers\n  })\n  .then(res => {\n    return getResponseData(res);\n  })\n  .catch(err => {\n    console.log(err);\n  });\n}\n\nconst updateCurrentUser = (name, about) => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify({\n      name: name,\n      about: about\n    })\n  })\n  .then(res => {\n    return getResponseData(res);\n  })\n  .catch(err => {\n    console.log(err);\n  });\n}\n\nconst updateUserAvatar = (avatarUrl) => {\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: avatarUrl\n    })\n  })\n  .then(res => {\n    return getResponseData(res);\n  })\n  .catch(err => {\n    console.log(err);\n  });\n}\n\nfunction getResponseData(res) {\n  if (!res.ok) {\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  return res.json();\n}\n\nconst getAllCards = () => {\n  return fetch(`${config.baseUrl}/cards`, {\n    headers: config.headers\n  })\n  .then(res => {\n    return getResponseData(res);\n  })\n  .catch(err => {\n    console.log(err);\n  });\n}\n\nconst addNewCard = (name, link) => {\n  return fetch(`${config.baseUrl}/cards`, {\n    method: 'POST',\n    headers: config.headers,\n    body: JSON.stringify({\n      name: name,\n      link: link\n    })\n  })\n  .then(res => {\n    return getResponseData(res);\n  })\n  .catch(err => {\n    console.log(err);\n  });\n}\n\nconst deleteCardRequest = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\n    method: 'DELETE',\n    headers: config.headers\n  })\n  .then(res => {\n    console.log(`Card with id: ${cardId} was deleted`)\n  })\n  .catch(err => {\n    console.log(err);\n  });\n}\n\nconst addLikeCard = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n    method: 'PUT',\n    headers: config.headers\n  })\n  .then(res => {\n    return getResponseData(res);\n  })\n  .catch(err => {\n    console.log(err);\n  });\n}\n\nconst deleteLikeCard = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n    method: 'DELETE',\n    headers: config.headers\n  })\n  .then(res => {\n    return getResponseData(res);\n  })\n  .catch(err => {\n    console.log(err);\n  });\n}\n\nexport {getCurrentUser, updateCurrentUser, updateUserAvatar, getAllCards, addNewCard, addLikeCard, deleteLikeCard, deleteCardRequest}\n","import {addLikeCard, deleteLikeCard, deleteCardRequest} from './api.js';\n\nconst cardTemplate = document.querySelector('#card-template').content;\n\n// Create new card\nfunction createCard(cardInfo, deleteCardCallback, likeCardCallback, openImageCardCallback, currentUserId) {\n  const cardElement = cardTemplate.querySelector('.card').cloneNode(true);\n  const deleteButton = cardElement.querySelector('.card__delete-button');\n  const likeButton = cardElement.querySelector('.card__like-button');\n  const cardImage = cardElement.querySelector('.card__image');\n  const cardTitle = cardElement.querySelector('.card__title');\n  const cardLikeCount = cardElement.querySelector('.card__like-count');\n\n  cardImage.src = cardInfo.link;\n  cardImage.alt = cardInfo.name;\n  cardTitle.textContent = cardInfo.name;\n  \n  if (cardInfo.likes) {\n    updateLikeCount(cardInfo, cardLikeCount);\n    if (cardInfo.likes.some(user => user._id == currentUserId)) {\n      likeButton.classList.add('card__like-button_is-active');\n    }\n  }\n\n  if (cardInfo.owner && cardInfo.owner._id == currentUserId) {\n    deleteButton.addEventListener('click', () => deleteCardCallback(cardElement, cardInfo._id));\n  } else {\n    deleteButton.remove();\n  }\n\n  \n  likeButton.addEventListener('click', () => likeCardCallback(cardElement, cardInfo._id));\n  cardImage.addEventListener('click',() => openImageCardCallback(cardInfo));\n  return cardElement;\n}\n\n// Like\nfunction likeCard(cardElement, cardId) {\n  const likeButton = cardElement.querySelector('.card__like-button');\n  const cardLikeCount = cardElement.querySelector('.card__like-count');\n  if (likeButton.classList.contains('card__like-button_is-active')) {\n    deleteLikeCard(cardId)\n    .then(data => {\n      updateLikeCount(data, cardLikeCount);\n    });\n  } else {\n    addLikeCard(cardId)\n    .then(data => {\n      updateLikeCount(data, cardLikeCount)\n    });;\n  }\n  likeButton.classList.toggle('card__like-button_is-active');\n}\n\nfunction updateLikeCount (cardInfo, cardLikeCount) {\n  if (cardInfo.likes.length != 0) {\n    cardLikeCount.textContent = cardInfo.likes.length\n  } else {\n    cardLikeCount.textContent = '';\n  }\n}\n\n// Функция удаления карточки\nfunction deleteCard(cardElement, cardId) {\n  deleteCardRequest(cardId)\n  cardElement.remove();\n}\n\nexport {createCard, likeCard, deleteCard}","function openModal(popup) {\n  popup.classList.add('popup_is-opened');\n  document.addEventListener('keydown', handleEscClose);\n}\n\nfunction closeModal(popup) {\n  popup.classList.remove('popup_is-opened');\n  document.removeEventListener('keydown', handleEscClose);\n}\n\nfunction handleEscClose(evt) {\n  const openedPopup = document.querySelector('.popup_is-opened');\n  if (evt.key === 'Escape') {\n    closeModal(openedPopup)\n  }\n}\n\nfunction handleOverlayClose(evt) {\n  if (evt.target === evt.currentTarget) {\n    closeModal(evt.target)\n  }\n}\n\nfunction setCloseModalOnOverlayListeners(popupList) {\n  popupList.forEach(popup => popup.addEventListener('click', handleOverlayClose))\n}\n\nexport {openModal, closeModal, setCloseModalOnOverlayListeners}","const showInputError = (formElement, inputElement, errorMessage) => {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.add('form__input_type_error');\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add('form__input-error_active');\n};\n\nconst clearValidation = (formElement, inputElement) => {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.remove('form__input_type_error');\n  errorElement.classList.remove('form__input-error_active');\n  errorElement.textContent = '';\n};\n\nconst checkInputValidity = (formElement, inputElement) => {\n  if (!inputElement.validity.valid) {\n    let validityMessage = inputElement.validationMessage;\n    if (inputElement.validity.valueMissing) {\n      validityMessage = 'Вы пропустили это поле'\n    } else if (inputElement.validity.tooShort) {\n      validityMessage = `Минимальное количество символов: ${inputElement.minLength}. Длина текста сейчас: ${inputElement.value.length} символ.`;\n    } else if (inputElement.validity.tooShort) {\n      validityMessage = `Минимальное количество символов: ${inputElement.maxLength}. Длина текста сейчас: ${inputElement.value.length} символ.`;\n    } else if (inputElement.validity.patternMismatch) {\n      validityMessage = inputElement.dataset.errorMessage;\n    } else if (inputElement.validity.typeMismatch) {\n      validityMessage = 'Введите адрес сайта';\n    }\n    showInputError(formElement, inputElement, validityMessage);\n  } else {\n    clearValidation(formElement, inputElement);\n  }\n};\n\nconst setEventListeners = (formElement) => {\n  const inputList = Array.from(formElement.querySelectorAll('.popup__input'));\n  const buttonElement = formElement.querySelector('.popup__button');\n\n  toggleButtonState(inputList, buttonElement);\n\n  inputList.forEach((inputElement) => {\n    inputElement.addEventListener('input', function () {\n      checkInputValidity(formElement, inputElement);\n      toggleButtonState(inputList, buttonElement);\n    });\n  });\n};\n\nconst enableValidation = () => {\n  const formList = Array.from(document.querySelectorAll('.popup__form'));\n  formList.forEach((formElement) => {\n    formElement.addEventListener('submit', function (evt) {\n      evt.preventDefault();\n    });\n    setEventListeners(formElement);\n  });\n};\n\nfunction hasInvalidInput(inputList) {\n  return inputList.some((inputElement) => {\n  return !inputElement.validity.valid;\n}); \n}\n\nfunction toggleButtonState(inputList, buttonElement) {\n  if (hasInvalidInput(inputList)) {\n    buttonElement.disabled = true;\n    buttonElement.classList.add('button_inactive');\n  } else {\n    buttonElement.disabled = false;\n    buttonElement.classList.remove('button_inactive');\n  }\n}\n\nexport {enableValidation, clearValidation, toggleButtonState}","import './pages/index.css';\nimport { createCard, likeCard, deleteCard } from './components/scripts/cards.js';\nimport { openModal, closeModal, setCloseModalOnOverlayListeners} from './components/scripts/modal.js';\nimport {enableValidation, clearValidation, toggleButtonState} from './components/scripts/validation.js';\nimport {getCurrentUser, updateCurrentUser, updateUserAvatar, getAllCards, addNewCard} from './components/scripts/api.js';\n\n// DOM узлы\nconst cardsContainer = document.querySelector(\".places__list\");\nconst editButton = document.querySelector('.profile__edit-button');\nconst editPopup = document.querySelector('.popup_type_edit');\nconst formEdit = document.forms.profile;\nconst profileImage = document.querySelector('.profile__image');\nconst newAvatarPopup = document.querySelector('.popup_type_new-avatar');\nconst formNewAvatar = document.forms.avatar;\nconst newAvatarInput = formNewAvatar.elements.avatar;\nconst profileName = document.querySelector('.profile__title');\nconst profileDescription = document.querySelector('.profile__description');\nconst inputName = formEdit.elements.name;\nconst inputDescription = formEdit.elements.description;\nconst formNewCard = document.forms.newplace;\nconst addCardButton = document.querySelector('.profile__add-button');\nconst newCardPopup = document.querySelector('.popup_type_new-card');\nconst inputPlace = formNewCard.elements.placename;\nconst inputLink = formNewCard.elements.link;\nconst popupCloseButtonList = document.querySelectorAll('.popup__close');\nconst popupList = document.querySelectorAll('.popup');\nconst imagePopup = document.querySelector('.popup_type_image');\nconst imagePopupPhoto = imagePopup.querySelector('.popup__image');\nconst imageCaption = imagePopup.querySelector('.popup__caption');\nlet currentUser;\n\n// Редактирование пользователя\nfunction handleProfileFormSubmit(evt) {\n  const saveButton = evt.target.querySelector('.popup__button');\n  evt.preventDefault();\n  profileName.textContent = inputName.value;\n  profileDescription.textContent = inputDescription.value;\n  saveButton.textContent = 'Сохранение...';\n  updateCurrentUser(inputName.value, inputDescription.value).then(res => {\n    saveButton.textContent = 'Сохранение';\n  })\n  closeModal(editPopup);\n}\n\nPromise.all([getCurrentUser(), getAllCards()])\n  .then(([userData, cardData]) => {\n    // Обработка данных о текущем пользователе\n    profileName.textContent = userData.name;\n    profileDescription.textContent = userData.about;\n    profileImage.style.backgroundImage = `url(${userData.avatar})`;\n    currentUser = userData;\n\n    // Обработка данных о карточках\n    cardData.forEach(item => {\n      cardsContainer.append(createCard(item, deleteCard, likeCard, openImage, currentUser._id));\n    });\n  })\n  .catch(error => {\n    console.error(error);\n  });\n\n// Добавление карточки\nfunction handleAddCardFormSubmit(evt) {\n  const saveButton = evt.target.querySelector('.popup__button');\n  evt.preventDefault();\n  const newItem = {\n    name: inputPlace.value,\n    link: inputLink.value\n  }\n  saveButton.textContent = 'Сохранение...';\n  addNewCard(inputPlace.value, inputLink.value)\n    .then(persistedCard => {\n      cardsContainer.prepend(createCard(persistedCard, deleteCard, likeCard, openImage, currentUser._id));\n      saveButton.textContent = 'Сохранение';\n    })\n    .catch(error => {\n      console.error(error);\n    });\n\n  formNewCard.reset();\n  closeModal(newCardPopup);\n}\n\n//\nfunction handleUpdateUserAvatar(evt) {\n  const saveButton = evt.target.querySelector('.popup__button');\n  evt.preventDefault();\n  saveButton.textContent = 'Сохранение...';\n  updateUserAvatar(newAvatarInput.value)\n    .then(res => {\n      saveButton.textContent = 'Сохранение';\n    })\n    .catch(error => {\n      console.error(error);\n    });\n  profileImage.style.backgroundImage = `url(${newAvatarInput.value})`;\n  formNewAvatar.reset();\n  closeModal(newAvatarPopup);\n}\n\n// Open Image Popup \nfunction openImage(cardInfo) {\n  imagePopupPhoto.src = cardInfo.link;\n  imagePopupPhoto.alt = cardInfo.name;\n  imageCaption.textContent = cardInfo.name;\n\n  openModal(imagePopup)\n}\n\nfunction openPropfilePopup(popup) {\n  const inputList = Array.from(document.forms.profile.querySelectorAll('.popup__input'));\n  inputList.forEach(input => clearValidation(document.forms.profile, input))\n  \n  inputName.value = profileName.textContent;\n  inputDescription.value = profileDescription.textContent;\n  toggleButtonState(inputList, popup.querySelector('.popup__button'));\n\n  openModal(popup);\n}\n\npopupCloseButtonList.forEach(closeButton => closeButton.addEventListener('click', (evt) => {\n  const openedPopup = evt.target.closest('.popup');\n  closeModal(openedPopup)\n}));\n\nsetCloseModalOnOverlayListeners(popupList)\nenableValidation();\n\n// Event listeners\neditButton.addEventListener('click', () => openPropfilePopup(editPopup));\nformEdit.addEventListener('submit', handleProfileFormSubmit)\nformNewCard.addEventListener('submit', handleAddCardFormSubmit)\nformNewAvatar.addEventListener('submit', handleUpdateUserAvatar)\naddCardButton.addEventListener('click',() => openModal(newCardPopup));\nprofileImage.addEventListener('click', () => openModal(newAvatarPopup));\n\nexport {profileName, profileDescription, inputName, inputDescription}\n"],"names":["config","baseUrl","headers","authorization","getResponseData","res","ok","json","Promise","reject","concat","status","cardTemplate","document","querySelector","content","createCard","cardInfo","deleteCardCallback","likeCardCallback","openImageCardCallback","currentUserId","cardElement","cloneNode","deleteButton","likeButton","cardImage","cardTitle","cardLikeCount","src","link","alt","name","textContent","likes","updateLikeCount","some","user","_id","classList","add","owner","addEventListener","remove","likeCard","cardId","contains","fetch","method","then","catch","err","console","log","deleteLikeCard","data","addLikeCard","toggle","length","deleteCard","deleteCardRequest","openModal","popup","handleEscClose","closeModal","removeEventListener","evt","openedPopup","key","handleOverlayClose","target","currentTarget","clearValidation","formElement","inputElement","errorElement","id","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","disabled","currentUser","cardsContainer","editButton","editPopup","formEdit","forms","profile","profileImage","newAvatarPopup","formNewAvatar","avatar","newAvatarInput","elements","profileName","profileDescription","inputName","inputDescription","description","formNewCard","newplace","addCardButton","newCardPopup","inputPlace","placename","inputLink","popupCloseButtonList","querySelectorAll","popupList","imagePopup","imagePopupPhoto","imageCaption","openImage","all","_ref","_ref2","userData","cardData","about","style","backgroundImage","forEach","item","append","error","closeButton","closest","setCloseModalOnOverlayListeners","Array","from","preventDefault","validityMessage","validationMessage","valueMissing","tooShort","minLength","value","maxLength","patternMismatch","dataset","errorMessage","typeMismatch","showInputError","checkInputValidity","setEventListeners","input","saveButton","body","JSON","stringify","persistedCard","prepend","reset","avatarUrl"],"sourceRoot":""}