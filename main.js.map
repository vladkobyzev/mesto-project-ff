{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/scripts/api.js","webpack://mesto-project-ff/./src/components/scripts/card.js","webpack://mesto-project-ff/./src/components/scripts/modal.js","webpack://mesto-project-ff/./src/components/scripts/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["const config = {\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-8',\n  headers: {\n    authorization: 'cdea2609-51f4-4604-8d74-eb96bd5a104d',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst getCurrentUser = () => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    headers: config.headers\n  })\n  .then(res => {\n    return getResponseData(res);\n  });\n}\n\nconst updateCurrentUser = (name, about) => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify({\n      name: name,\n      about: about\n    })\n  })\n  .then(res => {\n    return getResponseData(res);\n  });\n}\n\nconst updateUserAvatar = (avatarUrl) => {\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: avatarUrl\n    })\n  })\n  .then(res => {\n    return getResponseData(res);\n  });\n}\n\nfunction getResponseData(res) {\n  if (!res.ok) {\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  return res.json();\n}\n\nconst getAllCards = () => {\n  return fetch(`${config.baseUrl}/cards`, {\n    headers: config.headers\n  })\n  .then(res => {\n    return getResponseData(res);\n  });\n}\n\nconst addNewCard = (name, link) => {\n  return fetch(`${config.baseUrl}/cards`, {\n    method: 'POST',\n    headers: config.headers,\n    body: JSON.stringify({\n      name: name,\n      link: link\n    })\n  })\n  .then(res => {\n    return getResponseData(res);\n  });\n}\n\nconst deleteCardRequest = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\n    method: 'DELETE',\n    headers: config.headers\n  })\n  .then(res => {\n    console.log(`Card with id: ${cardId} was deleted`)\n  });\n}\n\nconst addLikeCard = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n    method: 'PUT',\n    headers: config.headers\n  })\n  .then(res => {\n    return getResponseData(res);\n  });\n}\n\nconst deleteLikeCard = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n    method: 'DELETE',\n    headers: config.headers\n  })\n  .then(res => {\n    return getResponseData(res);\n  });\n}\n\nexport {getCurrentUser, updateCurrentUser, updateUserAvatar, getAllCards, addNewCard, addLikeCard, deleteLikeCard, deleteCardRequest}\n","import {addLikeCard, deleteLikeCard, deleteCardRequest} from './api.js';\n\nconst cardTemplate = document.querySelector('#card-template').content;\n\n// Create new card\nfunction createCard(cardInfo, deleteCardCallback, likeCardCallback, openImageCardCallback, currentUserId) {\n  const cardElement = cardTemplate.querySelector('.card').cloneNode(true);\n  const deleteButton = cardElement.querySelector('.card__delete-button');\n  const likeButton = cardElement.querySelector('.card__like-button');\n  const cardImage = cardElement.querySelector('.card__image');\n  const cardTitle = cardElement.querySelector('.card__title');\n  const cardLikeCount = cardElement.querySelector('.card__like-count');\n\n  cardImage.src = cardInfo.link;\n  cardImage.alt = cardInfo.name;\n  cardTitle.textContent = cardInfo.name;\n  \n  if (cardInfo.likes) {\n    updateLikeCount(cardInfo, cardLikeCount);\n    if (cardInfo.likes.some(user => user._id == currentUserId)) {\n      likeButton.classList.add('card__like-button_is-active');\n    }\n  }\n\n  if (cardInfo.owner && cardInfo.owner._id == currentUserId) {\n    deleteButton.addEventListener('click', () => deleteCardCallback(cardElement, cardInfo._id));\n  } else {\n    deleteButton.remove();\n  }\n\n  \n  likeButton.addEventListener('click', () => likeCardCallback(cardElement, cardInfo._id));\n  cardImage.addEventListener('click',() => openImageCardCallback(cardInfo));\n  return cardElement;\n}\n\n// Like\nfunction likeCard(cardElement, cardId) {\n  const likeButton = cardElement.querySelector('.card__like-button');\n  const cardLikeCount = cardElement.querySelector('.card__like-count');\n  const likeMethod = likeButton.classList.contains('card__like-button_is-active')\n    ? deleteLikeCard\n    : addLikeCard;\n\n  likeMethod(cardId)\n    .then(data => {\n      likeButton.classList.toggle('card__like-button_is-active');\n      updateLikeCount(data, cardLikeCount);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n}\n\nfunction updateLikeCount (cardInfo, cardLikeCount) {\n  cardLikeCount.textContent = cardInfo.likes.length || '';\n}\n\n// Функция удаления карточки\nfunction deleteCard(cardElement, cardId) {\n  deleteCardRequest(cardId)\n    .then(res => {\n      cardElement.remove();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n}\n\nexport {createCard, likeCard, deleteCard}","function openModal(popup) {\n  popup.classList.add('popup_is-opened');\n  document.addEventListener('keydown', handleEscClose);\n}\n\nfunction closeModal(popup) {\n  popup.classList.remove('popup_is-opened');\n  document.removeEventListener('keydown', handleEscClose);\n}\n\nfunction handleEscClose(evt) {\n  if (evt.key === 'Escape') {\n    const openedPopup = document.querySelector('.popup_is-opened');\n    closeModal(openedPopup)\n  }\n}\n\nfunction handleOverlayClose(evt) {\n  if (evt.target === evt.currentTarget) {\n    closeModal(evt.target)\n  }\n}\n\nfunction setCloseModalOnOverlayListeners(popupList) {\n  popupList.forEach(popup => popup.addEventListener('click', handleOverlayClose))\n}\n\nexport {openModal, closeModal, setCloseModalOnOverlayListeners}","const showInputError = (formElement, inputElement, errorMessage, config) => {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.add(config.inputErrorClass);\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add(config.errorClass);\n};\n\nconst clearValidation = (formElement, config) => {\n  const inputList = Array.from(formElement.querySelectorAll(config.inputSelector));\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\n\n  inputList.forEach((input) => hideInputError(formElement, input, config));\n  toggleButtonState(inputList, buttonElement, config);\n};\n\nconst hideInputError = (formElement, inputElement, config) => {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.remove(config.inputErrorClass);\n  errorElement.classList.remove(config.errorClass);\n  errorElement.textContent = \"\";\n};\n\nconst checkInputValidity = (formElement, inputElement, config) => {\n  if (!inputElement.validity.valid) {\n    const validityMessage = inputElement.validity.patternMismatch\n      ? inputElement.dataset.errorMessage\n      : inputElement.validationMessage;;\n\n    showInputError(formElement, inputElement, validityMessage, config);\n  } else {\n    hideInputError(formElement, inputElement, config);\n  }\n};\n\nconst setEventListeners = (formElement, config) => {\n  const inputList = Array.from(formElement.querySelectorAll(config.inputSelector));\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\n\n  toggleButtonState(inputList, buttonElement, config);\n\n  inputList.forEach((inputElement) => {\n    inputElement.addEventListener(\"input\", function () {\n      checkInputValidity(formElement, inputElement, config);\n      toggleButtonState(inputList, buttonElement, config);\n    });\n  });\n};\n\nconst enableValidation = config => {\n  const formList = Array.from(document.querySelectorAll(config.formSelector));\n  formList.forEach((formElement) => {\n    formElement.addEventListener(\"submit\", function (evt) {\n      evt.preventDefault();\n    });\n    setEventListeners(formElement, config);\n  });\n};\n\nfunction hasInvalidInput(inputList) {\n  return inputList.some((inputElement) => {\n    return !inputElement.validity.valid;\n  });\n}\n\nfunction toggleButtonState(inputList, buttonElement, config) {\n  if (hasInvalidInput(inputList)) {\n    buttonElement.disabled = true;\n    buttonElement.classList.add(config.inactiveButtonClass);\n  } else {\n    buttonElement.disabled = false;\n    buttonElement.classList.remove(config.inactiveButtonClass);\n  }\n}\n\nexport { enableValidation, clearValidation, toggleButtonState };\n","import \"./pages/index.css\";\nimport {\n  createCard,\n  likeCard,\n  deleteCard,\n} from \"./components/scripts/card.js\";\nimport {\n  openModal,\n  closeModal,\n  setCloseModalOnOverlayListeners,\n} from \"./components/scripts/modal.js\";\nimport {\n  enableValidation,\n  clearValidation,\n  toggleButtonState,\n} from \"./components/scripts/validation.js\";\nimport {\n  getCurrentUser,\n  updateCurrentUser,\n  updateUserAvatar,\n  getAllCards,\n  addNewCard,\n} from \"./components/scripts/api.js\";\n\n// DOM узлы\nconst cardsContainer = document.querySelector(\".places__list\");\nconst editButton = document.querySelector(\".profile__edit-button\");\nconst editPopup = document.querySelector(\".popup_type_edit\");\nconst formEdit = document.forms.profile;\nconst profileImage = document.querySelector(\".profile__image\");\nconst newAvatarPopup = document.querySelector(\".popup_type_new-avatar\");\nconst formNewAvatar = document.forms.avatar;\nconst newAvatarInput = formNewAvatar.elements.avatar;\nconst profileName = document.querySelector(\".profile__title\");\nconst profileDescription = document.querySelector(\".profile__description\");\nconst inputName = formEdit.elements.name;\nconst inputDescription = formEdit.elements.description;\nconst formNewCard = document.forms.newplace;\nconst addCardButton = document.querySelector(\".profile__add-button\");\nconst newCardPopup = document.querySelector(\".popup_type_new-card\");\nconst inputPlace = formNewCard.elements.placename;\nconst inputLink = formNewCard.elements.link;\nconst popupCloseButtonList = document.querySelectorAll(\".popup__close\");\nconst popupList = document.querySelectorAll(\".popup\");\nconst imagePopup = document.querySelector(\".popup_type_image\");\nconst imagePopupPhoto = imagePopup.querySelector(\".popup__image\");\nconst imageCaption = imagePopup.querySelector(\".popup__caption\");\nconst validationConfig = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button',\n  inactiveButtonClass: 'button_inactive',\n  inputErrorClass: 'form__input_type_error',\n  errorClass: 'form__input-error_active'\n};\nlet currentUser;\n\n// Редактирование пользователя\nfunction handleProfileFormSubmit(evt) {\n  const saveButton = evt.target.querySelector(\".popup__button\");\n  evt.preventDefault();\n\n  saveButton.textContent = \"Сохранение...\";\n  updateCurrentUser(inputName.value, inputDescription.value)\n    .then((res) => {\n      profileName.textContent = res.name;\n      profileDescription.textContent = res.about;\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n    .finally(() => {\n      saveButton.textContent = \"Сохранить\";\n    })\n\n  closeModal(editPopup);\n}\n\nPromise.all([getCurrentUser(), getAllCards()])\n  .then(([userData, cardData]) => {\n    // Обработка данных о текущем пользователе\n    profileName.textContent = userData.name;\n    profileDescription.textContent = userData.about;\n    profileImage.style.backgroundImage = `url(${userData.avatar})`;\n    currentUser = userData;\n\n    // Обработка данных о карточках\n    cardData.forEach((item) => {\n      cardsContainer.append(\n        createCard(item, deleteCard, likeCard, openImage, currentUser._id)\n      );\n    });\n  })\n  .catch((error) => {\n    console.error(error);\n  });\n\n// Добавление карточки\nfunction handleAddCardFormSubmit(evt) {\n  const saveButton = evt.target.querySelector(\".popup__button\");\n  evt.preventDefault();\n  saveButton.textContent = \"Сохранение...\";\n  addNewCard(inputPlace.value, inputLink.value)\n    .then((persistedCard) => {\n      cardsContainer.prepend(\n        createCard(\n          persistedCard,\n          deleteCard,\n          likeCard,\n          openImage,\n          currentUser._id\n        )\n      );\n    })\n    .catch((error) => {\n      console.error(error);\n    })\n    .finally(() => {\n      saveButton.textContent = \"Сохранить\";\n    });\n\n  formNewCard.reset();\n  closeModal(newCardPopup);\n}\n\n//\nfunction handleUpdateUserAvatar(evt) {\n  const saveButton = evt.target.querySelector(\".popup__button\");\n  evt.preventDefault();\n\n  saveButton.textContent = \"Сохранение...\";\n  updateUserAvatar(newAvatarInput.value)\n    .then((res) => {\n      profileImage.style.backgroundImage = `url(${res.avatar})`;\n    })\n    .catch((error) => {\n      console.error(error);\n    })\n    .finally(() => {\n      saveButton.textContent = \"Сохранить\";\n    });\n\n  formNewAvatar.reset();\n  closeModal(newAvatarPopup);\n}\n\n// Open Image Popup\nfunction openImage(cardInfo) {\n  imagePopupPhoto.src = cardInfo.link;\n  imagePopupPhoto.alt = cardInfo.name;\n  imageCaption.textContent = cardInfo.name;\n\n  openModal(imagePopup);\n}\n\nfunction openPropfilePopup(popup) {\n  inputName.value = profileName.textContent;\n  inputDescription.value = profileDescription.textContent;\n  clearValidation(document.forms.profile, validationConfig);\n\n\n  openModal(popup);\n}\n\npopupCloseButtonList.forEach((closeButton) =>\n  closeButton.addEventListener(\"click\", (evt) => {\n    const openedPopup = evt.target.closest(\".popup\");\n    closeModal(openedPopup);\n  })\n);\n\nsetCloseModalOnOverlayListeners(popupList);\nenableValidation(validationConfig);\n\n// Event listeners\neditButton.addEventListener(\"click\", () => openPropfilePopup(editPopup));\nformEdit.addEventListener(\"submit\", handleProfileFormSubmit);\nformNewCard.addEventListener(\"submit\", handleAddCardFormSubmit);\nformNewAvatar.addEventListener(\"submit\", handleUpdateUserAvatar);\naddCardButton.addEventListener(\"click\", () => openModal(newCardPopup));\nprofileImage.addEventListener(\"click\", () => openModal(newAvatarPopup));\n\nexport { profileName, profileDescription, inputName, inputDescription };\n"],"names":["config","baseUrl","headers","authorization","getResponseData","res","ok","json","Promise","reject","concat","status","addLikeCard","cardId","fetch","method","then","deleteLikeCard","cardTemplate","document","querySelector","content","createCard","cardInfo","deleteCardCallback","likeCardCallback","openImageCardCallback","currentUserId","cardElement","cloneNode","deleteButton","likeButton","cardImage","cardTitle","cardLikeCount","src","link","alt","name","textContent","likes","updateLikeCount","some","user","_id","classList","add","owner","addEventListener","remove","likeCard","contains","data","toggle","catch","err","console","log","length","deleteCard","deleteCardRequest","openModal","popup","handleEscClose","closeModal","removeEventListener","evt","key","handleOverlayClose","target","currentTarget","hideInputError","formElement","inputElement","errorElement","id","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","currentUser","cardsContainer","editButton","editPopup","formEdit","forms","profile","profileImage","newAvatarPopup","formNewAvatar","avatar","newAvatarInput","elements","profileName","profileDescription","inputName","inputDescription","description","formNewCard","newplace","addCardButton","newCardPopup","inputPlace","placename","inputLink","popupCloseButtonList","querySelectorAll","popupList","imagePopup","imagePopupPhoto","imageCaption","validationConfig","formSelector","inputSelector","submitButtonSelector","openImage","all","_ref","_ref2","userData","cardData","about","style","backgroundImage","forEach","item","append","error","closeButton","closest","setCloseModalOnOverlayListeners","Array","from","preventDefault","errorMessage","showInputError","patternMismatch","dataset","validationMessage","checkInputValidity","setEventListeners","enableValidation","value","input","clearValidation","saveButton","body","JSON","stringify","finally","persistedCard","prepend","reset","avatarUrl"],"sourceRoot":""}